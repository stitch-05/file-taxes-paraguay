#!/bin/bash

encrypt() {
  if [[ ! -z "$1" ]]; then
    KEY=707265696d707265736f436f72726563
    IV=50506172736574696d65313773327733

    echo -n $1 | openssl enc -aes128 -a -A -K $KEY -iv $IV
  else
    return 1;
  fi
}

urlencode() {
  local l=${#1}
  for (( i = 0 ; i < l ; i++ )); do
    local c=${1:i:1}
    case "$c" in
      [a-zA-Z0-9.~_-]) printf "$c" ;;
      ' ') printf + ;;
      *) printf '%%%.2X' "'$c"
    esac
  done
}

send_message() {
  if [[ -z "$2" ]]; then
    echo "Notification error: No message defined"
    return 1
  fi

  echo "MSG:" "$1" "$2"

  case $NOTIFICATION_SERVICE in
    pushover)
      $WORKING_DIR/services/pushover.sh "$1" "${MESSAGE_PREFIX}$2"
    ;;

    signal)
      $WORKING_DIR/services/signal.sh "${MESSAGE_PREFIX}$1"$'\n'"$2"
    ;;

    email)
      #                                        <subject>       <msg>
      $WORKING_DIR/services/post_man.py "${MESSAGE_PREFIX} $1" "$2"
    ;;
  *)
    echo "No notification service configured"
    return 1
  esac
}

random_sleep() {
  MAX=4
  RAND=$(od -d -N2 -An /dev/urandom)
  RAND_NUM=$(( $RAND % $MAX + 1 ))

  echo "Waiting ${RAND_NUM}s between requests..."
  sleep $RAND_NUM
}

pad_to_two() {
  printf "%0*d\n" 2 $((10#$1))
}

period() {
  YEAR=$(date +%Y)
  MONTH=$(date +%m)

  [ $MONTH -eq "01" ] && ((YEAR--)) || YEAR=$YEAR
  [ $MONTH -eq "01" ] && MONTH=12 || MONTH=$(( 10#$MONTH - 1 ))
  MONTH=$(pad_to_two $MONTH)

  echo "$YEAR$MONTH"
}

is_required() {
  command -v $1 >/dev/null 2>&1 || { 
    echo >&2 "'$1' is required but not installed. Aborting."; 
    return 1
  }
}

install_instructions() {
  PKG=$1
  DEB_PKG=${2:-$PKG}
  RH_PKG=${3:-$PKG}
  MAC_PKG=${4:-$PKG}
  OS="$(uname -s)"

  case "${OS}" in
    Linux*)
      echo "To install on a Debian based distro, run:"
      echo "sudo apt update && sudo apt install $DEB_PKG"
      echo ""
      echo "To install on a RedHat based distro, run:"
      echo "sudo dnf install $RH_PKG"
    ;;
    Darwin*)
      echo "To install on MacOS, run:"
      echo "brew install $MAC_PKG"
    ;;
    *)          
      echo "Install $PKG manually using your system's package manager or source code."
    ;;
  esac

  exit 1
}